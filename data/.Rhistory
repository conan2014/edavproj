out <- geojson_read(file)
file <- system.file("Downloads", "beijing.geojson", package = "geojsonio")
out <- geojson_read(file)
file <- system.file("Downloads/beijing.geojson", package = "geojsonio")
out <- geojson_read(file)
bj <- readOGR(dsn="Downloads",layer="beijing.geojson")
library(rgdal)
bj <- readOGR(dsn="Downloads",layer="beijing.geojson")
bj <- readOGR(dsn="Downloads",layer="beijing")
bj <- readOGR(dsn="Downloads",layer="beijing",package = "geojsonio")
summary(all_2013$unit_price)
file <- system.file("Downloads/beijing.geojson", package = "geojsonio")
out <- geojson_read(file)
plot(out)
file <- system.file('Downloads/beijing.geojson', package = "geojsonio")
out <- geojson_read(file)
plot(out)
file <- system.file('Downloads','beijing.geojson', package = "geojsonio")
out <- geojson_read(file)
library(rgdal)
# read the shapefile and convert to data frame
bj <- readOGR(dsn="Downloads/Beijing",layer="Beijing")
plot(bj)
file <- system.file('/Users/Even/Downloads','beijing.geojson', package = "geojsonio")
out <- geojson_read(file)
install.packages("rjson")
library(rjson)
bjbj=fromJSON('Downloads/beijing1.json')
bjbj=fromJSON("Downloads/beijing1.json")
bjbj=fromJSON(Downloads/beijing1.json)
json_data <- fromJSON(paste(readLines("Downloads/beijing1.json"), collapse=""))
json_data
plot(json_data)
plot(data.frame(json_data))
plot(data.frame(json_data))
json=data.frame(json_data)
View(json)
file <- system.file('/Users/Even/Downloads','beijing.geojson', package = "geojsonio")
out <- geojson_read(file)
library(geojsonio)
file <- system.file('/Users/Even/Downloads','beijing.geojson', package = "geojsonio")
out <- geojson_read(file)
library(rjson)
bjbj=fromJSON(file="Downloads/beijing1.json")
bjbj
bjbjtdata.frame(t(bjbj))
bjbjt=data.frame(t(bjbj))
View(bjbjt)
bjbj=data.frame(bjbj)
View(bjbj)
plot(bjbj)
library(ggmap)
bjbase = qmap(location= "Beijing",
zoom = 13,
maptype = "hybrid",
souce = "osm",
color = 'color',
legend = 'topleft')
bjbase +
stat_density2d(data = bj_all,
aes(x = x, y = y, fill = ..level.., alpha = ..level..),
size = 10, bins = 5, geom = "polygon") +
scale_alpha(range = c(0.1, 0.4), guide = FALSE) +
scale_fill_gradient(low = "beige", high = "blue")
colnames(bj) <- c('obj_id', 'land_id','transferee','location','district','plot_area','archi_area',
'use','price','floor_area_ratio','announce_date','Y','X')
# remove records where 0 m^2 land was transfered
bj = subset(bj, plot_area!=0)
# adding column "unit price" (RMB/m^2)
bj$unit_price = 100000 * bj$price / bj$plot_area
# we may want to look at the land for various use separately
# the land usage column (规划用途) column is pretty messy now
library(sqldf)
industrial=sqldf("SELECT * FROM bj WHERE use LIKE '工业%'")
residential=sqldf("SELECT * FROM bj WHERE use LIKE '住宅%' OR use LIKE '城镇住宅%' OR use LIKE '居住%' OR use LIKE '公寓%'")
commercial=sqldf("SELECT * FROM bj WHERE use LIKE '商业%' OR use LIKE '商务%' OR use LIKE '商服%'")
office=sqldf("SELECT * FROM bj WHERE use LIKE '办公%'")
multiple=sqldf("SELECT * FROM bj WHERE use LIKE '综合%'")
others =sqldf("SELECT * FROM bj R WHERE R.obj_id not in (Select obj_id from 'industrial')")
others =sqldf("SELECT * FROM others R WHERE R.obj_id not in (Select obj_id from 'residential')")
others =sqldf("SELECT * FROM others R WHERE R.obj_id not in (Select obj_id from 'commercial')")
others =sqldf("SELECT * FROM others R WHERE R.obj_id not in (Select obj_id from 'office')")
others =sqldf("SELECT * FROM others R WHERE R.obj_id not in (Select obj_id from 'multiple')")
# add clean tags to each class and re-combine the dataset
land_use=c('residential','industrial','commercial','office','multiple','others')
residential$class=land_use[1]
industrial$class=land_use[2]
commercial$class=land_use[3]
office$class=land_use[4]
multiple$class=land_use[5]
others$class=land_use[6]
bj_all = rbind(residential, industrial, commercial, office, multiple, others)
# make bar chart to compare recent unit price (in 2013) for difference use of land
all_2013 = subset(bj_all, as.Date(announce_date)>'2013-01-01')
library(ggmap)
bjbase = qmap(location= "Beijing",
zoom = 13,
maptype = "hybrid",
souce = "osm",
color = 'color',
legend = 'topleft')
bjbase +
stat_density2d(data = bj_all,
aes(x = x, y = y, fill = ..level.., alpha = ..level..),
size = 10, bins = 5, geom = "polygon") +
scale_alpha(range = c(0.1, 0.4), guide = FALSE) +
scale_fill_gradient(low = "beige", high = "blue")
bjbase +
stat_density2d(data = bj_all,
aes(x = X, y = Y, fill = ..level.., alpha = ..level..),
size = 10, bins = 5, geom = "polygon") +
scale_alpha(range = c(0.1, 0.4), guide = FALSE) +
scale_fill_gradient(low = "beige", high = "blue")
View(bj_all)
View(bj_all)
View(bj_all)
View(bj_all)
colnames(bj) <- c('obj_id', 'land_id','transferee','location','district','plot_area','archi_area',
'use','price','floor_area_ratio','announce_date','Y','X')
library(rgdal)
# read the shapefile and convert to data frame
bj <- readOGR(dsn="Downloads/DT2geo",layer="BJ_Land_Transactions")
bj <- as(bj, "data.frame")
# eliminate irrelevant columns
bj = subset(bj, select = -c(城市,宗地四至,签约时间,合同约定开,合同约定竣,浏览次数,PageUrl,coords.x1,coords.x2))
#change the names of the rest to English
colnames(bj) <- c('obj_id', 'land_id','transferee','location','district','plot_area','archi_area',
'use','price','floor_area_ratio','announce_date','Y','X')
# remove records where 0 m^2 land was transfered
bj = subset(bj, plot_area!=0)
# adding column "unit price" (RMB/m^2)
bj$unit_price = 100000 * bj$price / bj$plot_area
library(rgdal)
# read the shapefile and convert to data frame
bj <- readOGR(dsn="Downloads/DT2geo",layer="BJ_Land_Transactions")
bj <- as(bj, "data.frame")
# eliminate irrelevant columns
bj = subset(bj, select = -c(城市,宗地四至,签约时间,合同约定开,合同约定竣,浏览次数,PageUrl,coords.x1,coords.x2))
#change the names of the rest to English
colnames(bj) <- c('obj_id', 'land_id','transferee','location','district','plot_area','archi_area',
'use','price','floor_area_ratio','announce_date','Y','X')
# remove records where 0 m^2 land was transfered
bj = subset(bj, plot_area!=0)
# adding column "unit price" (RMB/m^2)
bj$unit_price = 100000 * bj$price / bj$plot_area
library(sqldf)
industrial=sqldf("SELECT * FROM bj WHERE use LIKE '工业%'")
residential=sqldf("SELECT * FROM bj WHERE use LIKE '住宅%' OR use LIKE '城镇住宅%' OR use LIKE '居住%' OR use LIKE '公寓%'")
commercial=sqldf("SELECT * FROM bj WHERE use LIKE '商业%' OR use LIKE '商务%' OR use LIKE '商服%'")
office=sqldf("SELECT * FROM bj WHERE use LIKE '办公%'")
multiple=sqldf("SELECT * FROM bj WHERE use LIKE '综合%'")
others =sqldf("SELECT * FROM bj R WHERE R.obj_id not in (Select obj_id from 'industrial')")
others =sqldf("SELECT * FROM others R WHERE R.obj_id not in (Select obj_id from 'residential')")
others =sqldf("SELECT * FROM others R WHERE R.obj_id not in (Select obj_id from 'commercial')")
others =sqldf("SELECT * FROM others R WHERE R.obj_id not in (Select obj_id from 'office')")
others =sqldf("SELECT * FROM others R WHERE R.obj_id not in (Select obj_id from 'multiple')")
# add clean tags to each class and re-combine the dataset
land_use=c('residential','industrial','commercial','office','multiple','others')
residential$class=land_use[1]
industrial$class=land_use[2]
commercial$class=land_use[3]
office$class=land_use[4]
multiple$class=land_use[5]
others$class=land_use[6]
bj_all = rbind(residential, industrial, commercial, office, multiple, others)
# make bar chart to compare recent unit price (in 2013) for difference use of land
all_2013 = subset(bj_all, as.Date(announce_date)>'2013-01-01')
library(ggplot2)
library(ggmap)
bjbase = qmap(location= "Beijing",
zoom = 13,
maptype = "hybrid",
souce = "osm",
color = 'color',
legend = 'topleft')
bjbase +
stat_density2d(data = bj_all,
aes(x = X, y = Y, fill = ..level.., alpha = ..level..),
size = 10, bins = 5, geom = "polygon") +
scale_alpha(range = c(0.1, 0.4), guide = FALSE) +
scale_fill_gradient(low = "beige", high = "blue")
View(commercial)
View(commercial)
bjbase +
stat_density2d(data = commercial,
aes(x = X, y = Y, fill = ..level.., alpha = ..level..),
size = 10, bins = 5, geom = "polygon") +
scale_alpha(range = c(0.1, 0.4), guide = FALSE) +
scale_fill_gradient(low = "beige", high = "blue")
dev.off()
bjbase +
stat_density2d(data = commercial,
aes(x = X, y = Y, fill = ..level.., alpha = ..level..),
size = 10, bins = 5, geom = "polygon") +
scale_alpha(range = c(0.1, 0.4), guide = FALSE) +
scale_fill_gradient(low = "beige", high = "blue")
library(ggmap)
bjbase = qmap(location= "Beijing",
zoom = 13,
source = "osm",
color = 'color',
legend = 'topleft')
bjbase +
stat_density2d(data = commercial,
aes(x = X, y = Y, fill = ..level.., alpha = ..level..),
size = 10, bins = 5, geom = "polygon") +
scale_alpha(range = c(0.1, 0.4), guide = FALSE) +
scale_fill_gradient(low = "beige", high = "blue")
library(ggmap)
bjbase = qmap(location= "Beijing",
zoom = 12,
source = "osm",
color = 'color',
legend = 'topleft')
bjbase +
stat_density2d(data = commercial,
aes(x = X, y = Y, fill = ..level.., alpha = ..level..),
size = 10, bins = 5, geom = "polygon") +
scale_alpha(range = c(0.1, 0.4), guide = FALSE) +
scale_fill_gradient(low = "beige", high = "blue")
bjbase = qmap(location= "Beijing",
zoom = 12,
source = "osm",
color = 'color',
legend = 'topleft')
bjbase = qmap(location= "Beijing",
zoom = 12,source = "osm",
legend = 'topleft')
map <- get_map(location="Beijing",source = "osm")
bjbase=ggmap(map)
bjbase +
stat_density2d(data = commercial,
aes(x = X, y = Y, fill = ..level.., alpha = ..level..),
size = 10, bins = 5, geom = "polygon") +
scale_alpha(range = c(0.1, 0.4), guide = FALSE) +
scale_fill_gradient(low = "beige", high = "blue")
bjbase = qmap(location= "Beijing",
zoom = 12,
maptype = "road",
source = "google")
bjbase +
stat_density2d(data = commercial,
aes(x = X, y = Y, fill = ..level.., alpha = ..level..),
size = 10, bins = 5, geom = "polygon") +
scale_alpha(range = c(0.1, 0.4), guide = FALSE) +
scale_fill_gradient(low = "beige", high = "blue")
bjbase +
stat_density2d(data = commercial,
aes(x = X, y = Y, fill = ..level.., alpha = ..level..),
size = 10, bins = 5, geom = "polygon") +
scale_alpha(range = c(0.1, 0.4), guide = FALSE) +
scale_fill_gradient(low = "beige", high = "red")
bjbase +
stat_density2d(data = commercial,
aes(x = X, y = Y, fill = ..level.., alpha = ..level..),
size = 15, bins = 5, geom = "polygon") +
scale_alpha(range = c(0.4, 0.8), guide = FALSE) +
scale_fill_gradient(low = "beige", high = "red")
bjbase = qmap(location= "Beijing",
zoom = 11,
maptype = "road",
source = "google")
bjbase +
stat_density2d(data = commercial,
aes(x = X, y = Y, fill = ..level.., alpha = ..level..),
size = 15, bins = 5, geom = "polygon") +
scale_alpha(range = c(0.4, 0.8), guide = FALSE) +
scale_fill_gradient(low = "beige", high = "red")
bjbase = qmap(location= "Beijing",
zoom = 12,
maptype = "road",
source = "google")
bjbase +
stat_density2d(data = commercial,
aes(x = X, y = Y, fill = ..level.., alpha = ..level..),
size = 15, bins = 5, geom = "polygon") +
scale_alpha(range = c(0.4, 0.8), guide = FALSE) +
scale_fill_gradient(low = "beige", high = "red")
bjbase = qmap(location= "Beijing",
zoom = 11,
maptype = "road",
source = "google")
bjbase +
stat_density2d(data = commercial,
aes(x = X, y = Y, fill = ..level.., alpha = ..level..),
size = 15, bins = 8, geom = "polygon") +
scale_alpha(range = c(0.4, 0.8), guide = FALSE) +
scale_fill_gradient(low = "beige", high = "red")
commercial_2011 = subset(commercial, as.Date(announce_date)>'2011-01-01', select=c('Y','X'))
residential_2011 = subset(residential, as.Date(announce_date)>'2011-01-01', select=c('Y','X'))
library(ggmap)
bjbase = qmap(location= "Beijing",
zoom = 11,
maptype = "road",
source = "google")
bjbase +
stat_density2d(data = commercial_2011,
aes(x = X, y = Y, fill = ..level.., alpha = ..level..),
size = 15, bins = 8, geom = "polygon") +
scale_alpha(range = c(0.4, 0.8), guide = FALSE) +
scale_fill_gradient(low = "beige", high = "red")
bjbase +
stat_density2d(data = commercial_2011,
aes(x = X, y = Y, fill = ..level.., alpha = ..level..),
size = 15, bins = 8, geom = "polygon") +
scale_alpha(range = c(0.2, 0.6), guide = FALSE) +
scale_fill_gradient(low = "beige", high = "red")
bjbase +
stat_density2d(data = commercial_2011,
aes(x = X, y = Y, fill = ..level.., alpha = ..level..),
size = 15, bins = 8, geom = "polygon") +
scale_alpha(range = c(0.3, 0.7), guide = FALSE) +
scale_fill_gradient(low = "beige", high = "red")
bjbase +
stat_density2d(data = residential_2011,
aes(x = X, y = Y, fill = ..level.., alpha = ..level..),
size = 15, bins = 8, geom = "polygon") +
scale_alpha(range = c(0.3, 0.7), guide = FALSE) +
scale_fill_gradient(low = "beige", high = "green")
bjbase +
stat_density2d(data = residential_2011,
aes(x = X, y = Y, fill = ..level.., alpha = ..level..),
size = 15, bins = 8, geom = "polygon") +
scale_alpha(range = c(0.3, 0.7), guide = FALSE) +
scale_fill_gradient(low = "beige", high = "blue")
bjbase +
stat_density2d(data = commercial_2011,
aes(x = X, y = Y, fill = ..level.., alpha = ..level..),
size = 15, bins = 8, geom = "polygon") +
scale_alpha(range = c(0.3, 0.7), guide = FALSE) +
scale_fill_gradient(low = "beige", high = "red")
bjbase +
stat_bin2d(data = commercial_2011,
aes(x=X, y=Y, fill=cut(..count.., c(0,1,2,3,4,5,6,8,10,Inf)), bins = 20),
alpha = 0.4)+
scale_fill_hue("count")
bjbase +
stat_bin2d(data = commercial_2011,
aes(x=X, y=Y, fill=cut(..count.., c(0,1,2,3,4,5,6,8,10,11,12,13)), bins = 20),
alpha = 0.4)+
scale_fill_hue("count")
bjbase +
stat_density2d(data = commercial_2011,
aes(x = X, y = Y, fill = ..level.., alpha = ..level..),
size = 15, bins = 8, geom = "polygon") +
scale_alpha(range = c(0.3, 0.7), guide = FALSE) +
scale_fill_gradient(low = "beige", high = "red")
bjbase +
stat_bin2d(data = commercial_2011,
aes(x=X, y=Y, fill=cut(..count.., c(0,1,2,3,4,5,6,8,10,11,12,13)), bins = 20),
alpha = 0.4)+
scale_fill_hue("count")
industrial_2011 = subset(industrial, as.Date(announce_date)>'2011-01-01', select=c('Y','X'))
bjbase +
stat_density2d(data = industrial_2011,
aes(x = X, y = Y, fill = ..level.., alpha = ..level..),
size = 15, bins = 8, geom = "polygon") +
scale_alpha(range = c(0.3, 0.7), guide = FALSE) +
scale_fill_gradient(low = "beige", high = "red")
bjbase +
stat_bin2d(data = industrial_2011,
aes(x=X, y=Y, fill=cut(..count.., c(0,1,2,3,4,5,6,8,10,11,12,13)), bins = 20),
alpha = 0.4)+
scale_fill_hue("count")
bjbase +
stat_density2d(data = industrial_2011,
aes(x = X, y = Y, fill = ..level.., alpha = ..level..),
size = 15, bins = 8, geom = "polygon") +
scale_alpha(range = c(0.3, 0.7), guide = FALSE) +
scale_fill_gradient(low = "beige", high = "red")
plotdf3=aggregate(bj_all, by=list(bj_all$class, bj_all$year), FUN='count')
plotdf4=aggregate(bj_all, by=list(bj_all$class, bj_all$year), FUN='length')
plotdf4=aggregate(bj_all$obj_id, by=list(bj_all$class, bj_all$year), FUN='length')
install.packages("plyr")
install.packages("plyr")
install.packages("plyr")
library(plyr)
count=count(bj_all, c("year", "class"))
bj_all$year = format(as.Date(bj_all$announce_date), "%Y")
count=count(bj_all, c("year", "class"))
View(count)
View(count)
View(count)
View(count)
p2 = ggplot(count, aes(x=year, y=freq, group = class, colour = class)) + geom_line()
library(ggplot2)
p2 = ggplot(count, aes(x=year, y=freq, group = class, colour = class)) + geom_line()
p2
View(count)
View(count)
colnames(count)=c('year','class','number_of_transactions')
p2 = ggplot(count, aes(x=year, y=number_of_transactions, group = class, colour = class)) + geom_line()
p2
# number of land transactions each year by land
library(plyr)
count=count(bj_all, c("year", "class"))
colnames(count)=c('year','class','number_of_transactions')
p2 = ggplot(count, aes(x=year, y=number_of_transactions, group = class, colour = class)) + geom_line()
# unit price of diffe land each year
library(reshape2)
bj_all$year = format(as.Date(bj_all$announce_date), "%Y")
plotdf2=aggregate(bj_all$unit_price, by=list(bj_all$class, bj_all$year), FUN='median')
colnames(plotdf2)=c('land_use','year','median_unit_price')
p3 = ggplot(plotdf2, aes(x=year, y=median_unit_price, group = land_use, colour = land_use)) + geom_line()
library(gridExtra)
grid.arrange(arrangeGrob(p2, p3))
# number of land transactions each year by land
library(plyr)
count=count(bj_all, c("year", "class"))
colnames(count)=c('year','class','number_of_transactions')
p2 = ggplot(count, aes(x=year, y=number_of_transactions, group = class, colour = class)) + geom_line()
# unit price of diffe land each year
library(reshape2)
bj_all$year = format(as.Date(bj_all$announce_date), "%Y")
plotdf2=aggregate(bj_all$unit_price, by=list(bj_all$class, bj_all$year), FUN='median')
colnames(plotdf2)=c('class','year','median_unit_price')
p3 = ggplot(plotdf2, aes(x=year, y=median_unit_price, group = class, colour = class)) + geom_line()
library(gridExtra)
grid.arrange(arrangeGrob(p2, p3))
commercial_2011 = subset(commercial, as.Date(announce_date)>'2011-01-01', select=c('Y','X'))
library(ggmap)
bjbase = qmap(location= "Beijing", zoom = 11, maptype = "road", source = "google")
p4 = bjbase +
stat_density2d(data = commercial_2011,
aes(x = X, y = Y, fill = ..level.., alpha = ..level..),
size = 15, bins = 8, geom = "polygon") +
scale_alpha(range = c(0.3, 0.7), guide = FALSE) +
scale_fill_gradient(low = "beige", high = "red")
p5 = bjbase +
stat_bin2d(data = commercial_2011,
aes(x=X, y=Y, fill=cut(..count.., c(0,1,2,3,4,5,6,8,10,11,12,13)), bins = 20),
alpha = 0.4)+
scale_fill_hue("count")
p4
p5
p5 = bjbase +
stat_bin2d(data = commercial_2011,
aes(x=X, y=Y, fill=cut(..count.., c(0,1,2,3,4,5,6,8,9,10)), bins = 20),
alpha = 0.4)+
scale_fill_hue(c("#F1EEF6", "#D4B9DA", "#C994C7", "#DF65B0", "#DD1C77", "#980043"))
p5
p5 = bjbase +
stat_bin2d(data = commercial_2011,
aes(x=X, y=Y, fill=cut(..count.., c(0,1,2,3,4,5,6,8,9,10), col=c("#F1EEF6", "#D4B9DA", "#C994C7", "#DF65B0", "#DD1C77", "#980043"), bins = 20),
alpha = 0.4)+
scale_fill_hue("count")
)
p5 = bjbase +
stat_bin2d(data = commercial_2011,
aes(x=X, y=Y, fill=cut(..count.., c(0,1,2,3,4,5,6,8,9,10),c("#F1EEF6", "#D4B9DA", "#C994C7", "#DF65B0", "#DD1C77", "#980043")), bins = 20),
alpha = 0.4)+
scale_fill_hue("count")
p5
p5 = bjbase +
stat_bin2d(data = commercial_2011,
aes(x=X, y=Y, fill=cut(..count.., c(0,1,2,3,4,5,6),c("#F1EEF6", "#D4B9DA", "#C994C7", "#DF65B0", "#DD1C77", "#980043")), bins = 20),
alpha = 0.4)+
scale_fill_hue("count")
p5
p5 = bjbase +
stat_bin2d(data = commercial_2011,
aes(x=X, y=Y, fill=cut(..count.., c(0,1,2,3,4,5,6),col=c("#F1EEF6", "#D4B9DA", "#C994C7", "#DF65B0", "#DD1C77", "#980043")), bins = 20),
alpha = 0.4)+
scale_fill_hue("count")
p5
p5 = bjbase +
stat_bin2d(data = commercial_2011,
aes(x=X, y=Y, fill=cut(..count.., c(0,1,2,3,4,5,6),col=c("#F1EEF6", "#D4B9DA", "#C994C7", "#DF65B0", "#DD1C77", "#980043")), bins = 20),
alpha = 0.4)+
scale_fill_hue("red")
p5
p5 = bjbase +
stat_bin2d(data = commercial_2011,
aes(x=X, y=Y, fill=cut(..count.., c(0,1,2,3,4,5,6)), bins = 20),
alpha = 0.4)+
scale_fill_hue("count")
p5
p4
p5
p4
p5 = bjbase +
stat_bin2d(data = commercial_2011,
aes(x=X, y=Y, fill=cut(..count.., c(0,1,2,3,4,5,6,100)), bins = 20),
alpha = 0.4)+
scale_fill_hue("count")
p5
p5 = bjbase +
stat_bin2d(data = commercial_2011,
aes(x=X, y=Y, fill=cut(..count.., c(0,1,2,3,4,5,6,20)), bins = 20),
alpha = 0.4)+
scale_fill_hue("count")
p5
p5 = bjbase +
stat_bin2d(data = commercial_2011,
aes(x=X, y=Y, fill=cut(..count.., c(0,1,2,3,4,5,6,15)), bins = 20),
alpha = 0.4)+
scale_fill_hue("count")
p5
p5 = bjbase +
stat_bin2d(data = commercial_2011,
aes(x=X, y=Y, fill=cut(..count.., c(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20)), bins = 20),
alpha = 0.4)+
scale_fill_hue("count")
p5
View(bj)
View(bj)
library(rgdal)
# read the shapefile and convert to data frame
bj <- readOGR(dsn="Downloads/DT2geo",layer="BJ_Land_Transactions")
bj <- as(bj, "data.frame")
View(bj)
View(bj)
